name: test-and-build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GO_VERSION: "~1.18"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.47.2

  # workaround
  # create emulator image because service container does not support docker command arguments
  prepare_emulator_image:
    name: Prepare emulator image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        target: [firestore-emulator]
    env:
      GCLOUD_VERSION: "406.0.0"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/${{ matrix.target }}/Dockerfile
          platforms: ${{ steps.params.outputs.platforms }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          build-args: |
            BASE_IMAGE_TAG=${{ env.GCLOUD_VERSION }}-emulators
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.target }}:latest

  test:
    needs: [prepare_emulator_image]
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      FIRESTORE_EMULATOR_HOST: localhost:8833
    services:
      firestore:
        image: ghcr.io/${{ github.repository_owner }}/firestore-emulator:latest
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8833:8833
        env:
          HOST_PORT: 0.0.0.0:8833
        options: >-
          --health-cmd "curl http://localhost:8833"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test
        run: make test

  check_uncommitted:
    name: Check uncommitted changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check generated files
        run: |
          make generate
          if [ -n "$(git status --porcelain)" ]; then
              echo "uncommitted changes"
              git status
              git --no-pager diff
              exit 1
          fi

  docker:
    needs: [lint, test, check_uncommitted]
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
    uses: ww24/linebot/.github/workflows/docker.yml@master
    with:
      image_tag: latest
      push: ${{ github.event_name == 'push' }}
    secrets:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}

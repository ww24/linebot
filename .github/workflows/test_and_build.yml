name: test-and-build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GO_VERSION: "~1.18"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Test
        run: make test

  check_uncommitted:
    name: Check uncommitted changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check generated files
        run: |
          make generate
          if [ -n "$(git status --porcelain)" ]; then
              echo "uncommitted changes"
              git status
              git --no-pager diff
              exit 1
          fi

  docker:
    needs: [lint, test, check_uncommitted]
    permissions:
      contents: read
      packages: write
      security-events: write
    uses: ww24/linebot/.github/workflows/docker.yml@master
    with:
      image_tag: latest
      push: ${{ github.event_name == 'push' }}
    secrets:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

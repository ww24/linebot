name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  test:
    permissions:
      contents: read
      packages: read
    uses: ww24/linebot/.github/workflows/test.yaml@master

  image_tag:
    name: Image tag
    outputs:
      image_tag: ${{ steps.tag.outputs.image_tag }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Output image tag
        id: tag
        run: |
          tag=$(echo "${GITHUB_REF}" | sed "s/^refs\/tags\/v//")
          if [ -z "$tag" ]; then
            exit 1
          fi
          echo "image_tag=$tag" | tee -a "${GITHUB_OUTPUT}"

  docker:
    needs: [test, image_tag]
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
    uses: ww24/linebot/.github/workflows/docker.yml@master
    with:
      image_tag: ${{ needs.image_tag.outputs.image_tag }}
      push: true
    secrets:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}

  release:
    name: Release
    needs: [image_tag, docker]
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3.5.3
      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Set image_tag
        run: |
          echo 'image_tag = "${{ needs.image_tag.outputs.image_tag }}"' \
            >> image_tag.auto.tfvars
      - name: Init
        run: terraform init
      - name: Validate
        run: terraform validate -no-color
      - name: Apply
        run: terraform apply -no-color
